{
	"info": {
		"_postman_id": "2cfbe114-227c-467d-ab7e-e51ad6d159b2",
		"name": "Hotel Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29530562"
	},
	"item": [
		{
			"name": "Hotels",
			"item": [
				{
					"name": "GET All Hotels",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hotels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Single Hotel",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hotels/{{HOTEL_ID1}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								"{{HOTEL_ID1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Hotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    pm.globals.set('hotel_id', pm.response.json().data.id);\r",
									"\r",
									"    console.log(`Hotel has been created -> ${JSON.stringify(pm.response.json().data)}`);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"address\": \"{{$randomStreetAddress}}\",\r\n    \"district\":\"Some district\",\r\n    \"tel\": \"Some phone number\",\r\n    \"region\": \"Some region\",\r\n    \"postalcode\": \"Some postalcode\",\r\n    \"province\" : \"Some province\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Single Hotel",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"UPDATED NAME\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_id"
							],
							"variable": [
								{
									"key": "hotel_id",
									"value": "{{hotel_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Hotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(`Deleted hotel id : ${ pm.globals.get('hotel_id') }`);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_id"
							],
							"variable": [
								{
									"key": "hotel_id",
									"value": "{{hotel_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var req = JSON.parse(pm.request.body.raw);\r",
									"console.log(`Created User -> ${JSON.stringify(req)}`);\r",
									"pm.globals.set('user_email' , req.email);\r",
									"pm.globals.set('user_password' , req.password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"name\": \"AdminUser\",\r\n//     \"tel\": \"{{$randomPhoneNumber}}\",\r\n//     \"email\": \"TestAdmin@gmail.com\",\r\n//     \"password\": \"123456\",\r\n//     \"role\": \"admin\"\r\n// }\r\n// {\r\n//     \"name\": \"NormalUser\",\r\n//     \"tel\": \"{{$randomPhoneNumber}}\",\r\n//     \"email\": \"TestUser@gmail.com\",\r\n//     \"password\": \"654321\",\r\n//     \"role\": \"user\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"email\": \"TestUser@gmail.com\",\r\n//     \"password\": \"123456\"\r\n// }\r\n\r\n{\r\n    \"email\": \"{{user_email}}\",\r\n    \"password\": \"{{user_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Logged in User with Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZGQ5ODEwYmYzMTVhY2I2MjU3ODM1OSIsImlhdCI6MTcwOTAyMTQ2MCwiZXhwIjoxNzExNjEzNDYwfQ.Ob8yxnQigKcXo00LI_kPzx2F3QPzOPATdpVsk818IKw",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookings",
			"item": [
				{
					"name": "Get All Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"postman.setNextRequest('Update ONE Booking');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ONE Booking",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:global_booking_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":global_booking_id"
							],
							"variable": [
								{
									"key": "global_booking_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ONE Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.globals.set('booking_id' , pm.response.json().data._id);\r",
									"    let count = pm.environment.get(\"BOOKING_COUNT\");\r",
									"    count++;\r",
									"    pm.environment.set(\"BOOKING_COUNT\",count);\r",
									"\r",
									"    if(count < 3){\r",
									"        postman.setNextRequest('Create ONE Booking');\r",
									"    }\r",
									"    else{\r",
									"        postman.setNextRequest('Fail to create Booking');\r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookDate\": \"{{$randomDateFuture}}\"    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/{{HOTEL_ID1}}/bookings/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								"{{HOTEL_ID1}}",
								"bookings",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail to create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"postman.setNextRequest('Update ONE Booking');\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookDate\": \"{{$randomDateFuture}}\"    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/{{HOTEL_ID1}}/bookings/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								"{{HOTEL_ID1}}",
								"bookings",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ONE Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest('Delete ONE Booking');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"hotel\": {{HOTEL_ID2}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bookings/{{booking_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								"{{booking_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ONE Booking",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings/{{booking_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								"{{booking_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Function Check",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//setup some env_var\r",
									"pm.environment.set(\"BOOKING_COUNT\" , 0);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(`Created User -> ${JSON.stringify(req)}`);\r",
									"});\r",
									"\r",
									"var req = JSON.parse(pm.request.body.raw);\r",
									"pm.environment.set('USER_EMAIL' , req.email);\r",
									"pm.environment.set('USER_PASSWORD' , req.password);\r",
									"\r",
									"postman.setNextRequest('User Login');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomUserName}}\",\r\n    \"tel\": \"{{$randomPhoneNumber}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"111111\",\r\n    \"role\": \"user\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(\"USER LOGGED IN\")\r",
									"});\r",
									"\r",
									"pm.environment.set(\"TOKEN\", pm.response.json().token);\r",
									"\r",
									"postman.setNextRequest('Get ALL Hotels')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{USER_EMAIL}}\",\r\n    \"password\": \"{{USER_PASSWORD}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ALL Hotels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var res = pm.response.json();\r",
									"    console.log(`Found ${res.count} hotels`);\r",
									"});\r",
									"\r",
									"postman.setNextRequest('Create ONE Booking');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hotels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ONE Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.environment.set(\"BID\" , pm.response.json().data._id);\r",
									"    console.log(`Create booking ID ${pm.response.json().data._id}`);\r",
									"\r",
									"    let count = pm.environment.get(\"BOOKING_COUNT\");\r",
									"    count++;\r",
									"    pm.environment.set(\"BOOKING_COUNT\",count);\r",
									"\r",
									"    if(count < 3){\r",
									"        postman.setNextRequest('Create ONE Booking');\r",
									"    }\r",
									"    else{\r",
									"        postman.setNextRequest('Fail to create Booking');\r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookDate\": \"{{$randomDateFuture}}\"    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_id/bookings/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_id",
								"bookings",
								""
							],
							"variable": [
								{
									"key": "hotel_id",
									"value": "{{HOTEL_ID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail to create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    console.log(\"User's Quota exceed the limit\")\r",
									"});\r",
									"\r",
									"postman.setNextRequest('Get All Bookings');\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookDate\": \"{{$randomDateFuture}}\"    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_id/bookings/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_id",
								"bookings",
								""
							],
							"variable": [
								{
									"key": "hotel_id",
									"value": "{{HOTEL_ID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var res = pm.response.json();\r",
									"    console.log(`Found ${res.count} bookings of the user`);\r",
									"});\r",
									"postman.setNextRequest('Update ONE Booking');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ONE Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(`Updated booking ID ${pm.environment.get(\"BID\")}`);\r",
									"});\r",
									"\r",
									"postman.setNextRequest('Delete ONE Booking');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"hotel\": \"{{HOTEL_ID2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_id"
							],
							"variable": [
								{
									"key": "booking_id",
									"value": "{{BID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ONE Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    console.log(`Deleted booking ID ${pm.environment.get(\"BID\")}`);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Booking for Admin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_id"
							],
							"variable": [
								{
									"key": "booking_id",
									"value": "{{BID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking for Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.environment.set('BID_FOR_ADMIN' , pm.response.json().data._id);\r",
									"});\r",
									"postman.setNextRequest(\"User Logout\");\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookDate\":\"{{$randomDateFuture}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_id/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_id",
								"bookings"
							],
							"variable": [
								{
									"key": "hotel_id",
									"value": "{{HOTEL_ID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(\"USER LOGGED OUT\")\r",
									"});\r",
									"\r",
									"pm.environment.set(\"TOKEN\", null)\r",
									"\r",
									"postman.setNextRequest(\"[Admin] Login\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Admin] Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(\"ADMIN LOGGED IN\")\r",
									"});\r",
									"\r",
									"pm.environment.set(\"TOKEN\", pm.response.json().token);\r",
									"\r",
									"postman.setNextRequest('[Admin] Get ALL Bookings');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"TestAdmin@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Admin] Get ALL Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var res = pm.response.json();\r",
									"    console.log(`Found ${res.count} bookings`);\r",
									"});\r",
									"\r",
									"postman.setNextRequest('[Admin] Update ONE Booking');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Admin] Update ONE Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(`Booking ID ${pm.environment.get('BID_FOR_ADMIN')} has been updated`);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"[Admin] Delete ONE Booking\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookDate\":\"2011-11-11T11:11:11.000+00:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_id"
							],
							"variable": [
								{
									"key": "booking_id",
									"value": "{{BID_FOR_ADMIN}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[Admin] Delete ONE Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(`Booking ID ${pm.environment.get('BID_FOR_ADMIN')} has been deleted`);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_id"
							],
							"variable": [
								{
									"key": "booking_id",
									"value": "{{BID_FOR_ADMIN}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}