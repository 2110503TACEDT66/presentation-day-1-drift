@startuml Manage Hotel (DELETE)

header Hotel Booking Sequence Diagram
footer Page %page% of %lastpage%
title "Manage Hotel (DELETE)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:hotels" as routerHotels
participant "<<middleware>>\n:auth" as middleware
participant "<<controllers>>\n:hotels" as controllerHotels

participant "<<model>>\n:Hotel" as modelHotel
database "<<MongoDB>>\n:hotels" as HotelsDatabase

participant "<<model>>\n:Booking" as modelBooking
database "<<MongoDB>>\n:bookings" as BookingsDatabase

client->server ++:req.delete('/api/v1/hotels/:id')

server->routerHotels ++:app.use('/api/v1/hotels/:id',hotels)


routerHotels -> middleware ++: protect(),authorize('admin')
alt token not match//is null/not an admin
    client <- middleware : not Authorize to access
end
middleware -> controllerHotels ++:deleteHotel()


controllerHotels->modelHotel ++:deleteOne()
alt not an admin
    client <- modelHotel: not Authorize to delete
end

modelHotel->modelBooking ++:BookingSchema

modelBooking ->BookingsDatabase -- :deleteMany({hotel:this._id})


modelHotel ->HotelsDatabase ++: HotelSchema

HotelsDatabase --> modelHotel --: hotel



controllerHotels <-- HotelsDatabase --:hotel

client<-controllerHotels --:HotelsDatabase


@enduml